// Max Marketcap in past 12 hours for a given token

WITH base_tokens AS (
    SELECT 
        token_mint_address,
        symbol,
        name,
        decimals
    FROM tokens_solana.fungible
    WHERE token_mint_address = '{{token_address}}'
),

token_supply AS (
  SELECT
      t.token_mint_address,
      SUM(CASE WHEN action = 'mint' THEN amount ELSE -amount END) AS total_supply_with_decimals
  FROM tokens_solana.transfers t
  WHERE action IN ('mint', 'burn') AND token_mint_address = '{{token_address}}'
  GROUP BY t.token_mint_address
),

price_data AS (
  WITH recent_trades AS (
    SELECT
      block_time,
      CASE
        WHEN token_bought_mint_address = '{{token_address}}' 
          THEN TRY(CAST(amount_usd AS DOUBLE) / NULLIF(token_bought_amount, 0))
        ELSE TRY(CAST(amount_usd AS DOUBLE) / NULLIF(token_sold_amount, 0))
      END AS token_price
    FROM dex_solana.trades
    WHERE
      block_time >= NOW() - INTERVAL '12' HOUR
      AND (
        token_bought_mint_address = '{{token_address}}'
        OR token_sold_mint_address = '{{token_address}}'
      )
      AND GREATEST(COALESCE(token_bought_amount, 0), COALESCE(token_sold_amount, 0)) > 0
      AND amount_usd > 0
    ORDER BY token_price DESC
    LIMIT 1
  ),

  historical_trades AS (
    SELECT
      block_time,
      CASE
        WHEN token_bought_mint_address = '{{token_address}}' 
          THEN TRY(CAST(amount_usd AS DOUBLE) / NULLIF(token_bought_amount, 0))
        ELSE TRY(CAST(amount_usd AS DOUBLE) / NULLIF(token_sold_amount, 0))
      END AS token_price
    FROM dex_solana.trades
    WHERE
      (
        token_bought_mint_address = '{{token_address}}'
        OR token_sold_mint_address = '{{token_address}}'
      )
      AND GREATEST(COALESCE(token_bought_amount, 0), COALESCE(token_sold_amount, 0)) > 0
      AND amount_usd > 0
    ORDER BY block_time DESC
    LIMIT 1
  )

  SELECT
    COALESCE(r.block_time, h.block_time) AS block_time,
    COALESCE(r.token_price, h.token_price) AS token_price
  FROM recent_trades r
  FULL OUTER JOIN historical_trades h ON TRUE
  ORDER BY COALESCE(r.block_time, h.block_time) DESC
  LIMIT 1
)

SELECT
  ts.token_mint_address,
  MAX((ts.total_supply_with_decimals / POWER(10, bt.decimals)) * p.token_price) AS max_market_cap,
  p.block_time
FROM token_supply ts
JOIN base_tokens bt ON TRUE
JOIN price_data p ON TRUE
GROUP BY ts.token_mint_address, p.block_time
