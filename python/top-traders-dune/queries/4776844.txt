// First Buy wallets of a given token within 10mins after launch(updated).

WITH token_launches AS (
    SELECT
        token_mint_address,
        created_at,
        symbol
    FROM tokens_solana.fungible
    WHERE token_mint_address = '{{token_mint_address}}'
),
early_buyers AS (
    SELECT 
        t.token_mint_address,
        trades.trader_id,
        MIN(trades.block_time) as first_buy_time
    FROM token_launches t
    JOIN dex_solana.trades trades
        ON t.token_mint_address = trades.token_bought_mint_address
        AND trades.block_time >= t.created_at
        AND trades.block_time <= t.created_at + INTERVAL '10' MINUTE
    GROUP BY t.token_mint_address, trades.trader_id
),
trader_performance AS (
    SELECT
        eb.token_mint_address,
        t.symbol,
        t.created_at AS token_launch_time,
        eb.trader_id,
        eb.first_buy_time,
        SUM(CASE WHEN trades.token_bought_mint_address = eb.token_mint_address THEN trades.token_bought_amount ELSE 0 END) as total_buy_volume,
        SUM(CASE WHEN trades.token_sold_mint_address = eb.token_mint_address THEN trades.token_sold_amount ELSE 0 END) as total_sell_volume,
        SUM(CASE WHEN trades.token_bought_mint_address = eb.token_mint_address then -trades.amount_usd ELSE trades.amount_usd END) as total_pnl,
        ROW_NUMBER() OVER (PARTITION BY eb.token_mint_address ORDER BY eb.first_buy_time ASC) as buyer_rank
    FROM early_buyers eb
    JOIN token_launches t ON eb.token_mint_address = t.token_mint_address
    LEFT JOIN dex_solana.trades trades 
        ON eb.token_mint_address IN (trades.token_bought_mint_address, trades.token_sold_mint_address)
        AND eb.trader_id = trades.trader_id
    GROUP BY eb.token_mint_address, t.symbol, eb.trader_id, eb.first_buy_time
)
SELECT *
FROM trader_performance
WHERE buyer_rank <= 50
ORDER BY first_buy_time ASC, buyer_rank ASC
